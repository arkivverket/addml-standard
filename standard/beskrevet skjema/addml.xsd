<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<xs:schema xmlns:addml="http://www.arkivverket.no/standarder/addml"
	xmlns:xs="http://www.w3.org/2001/XMLSchema"
	targetNamespace="http://www.arkivverket.no/standarder/addml" elementFormDefault="qualified"
	version="8.2">
	<xs:annotation>
		<xs:documentation xml:lang="en">Changes made in versions up to 8.2 are not documented in
			this document. Updated 2014-08-15 and 2014-09-29, Terje Pettersen-Dahl: Version 8.3: 1.
			Element reference in dataset made optional. 2. Optional possibility for header-lines. 3.
			FieldDefinitionReference made unique within an instance. 4. Created this documentation
			section.</xs:documentation>
	</xs:annotation>
	<xs:element name="addml">
		<xs:annotation>
			<xs:documentation source="overview" xml:lang="no">På toppnivået er det kun ett element - addml.</xs:documentation>
			<xs:documentation source="description" xml:lang="no">addml er toppnivået i strukturen. Dette elementet skal eksistere en og kun en gang i henhold til reglene for XML.</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:sequence>
				<xs:element ref="addml:dataset" maxOccurs="unbounded" />
			</xs:sequence>
			<xs:attribute name="name" type="xs:string">
				<xs:annotation>
					<xs:documentation source="description" xml:lang="no">name angir navnet til denne addml-filen. Det er ingen krav til navnsetting i utgangspunktet.</xs:documentation>
				</xs:annotation>
			</xs:attribute>
		</xs:complexType>
	</xs:element>
	<xs:element name="dataset">
		<xs:annotation>
			<xs:documentation source="overview" xml:lang="no">Hovednivået dataset som tilsvarer et datasett har også bare ett enkelt element. Til gjengjeld kan dette forekomme flere ganger.</xs:documentation>
			<xs:documentation source="description" xml:lang="no">dataset er hovednivået i beskrivelsen. I Arkivverket tilsvarer dette et arkivuttrekk. Imidlertid kan en og samme beskrivelse også inneholde flere dataset. Dette for at det skal være mulig å samle beskrivelser når de skal benyttes sammen, for eksempel i en brukssituasjon.</xs:documentation>
			<xs:documentation source="example" xml:lang="no"><![CDATA[
Ved flere datasett i samme addml-fil er det anbefalt å bruke attributten name for hvert datasett for å holde de adskilt.]]></xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:sequence>
				<xs:element ref="addml:description" minOccurs="0" />
				<xs:element ref="addml:reference" minOccurs="0" />
				<xs:element ref="addml:flatFiles" minOccurs="0" />
				<xs:element ref="addml:dataObjects" minOccurs="0" />
			</xs:sequence>
			<xs:attribute name="name" type="xs:string">
				<xs:annotation>
					<xs:documentation source="description" xml:lang="no">name angir navnet til det spesifikke datasettet. Det er ingen krav til navnsetting i utgangspunktet, men navnene for samme type objekt må være unike innen en addml-fil.</xs:documentation>
				</xs:annotation>
			</xs:attribute>
		</xs:complexType>
	</xs:element>
	<xs:element name="reference">
		<xs:complexType>
			<xs:sequence>
				<xs:element ref="addml:context" minOccurs="0" />
				<xs:element ref="addml:content" minOccurs="0" />
			</xs:sequence>
			<xs:attribute name="name" type="xs:string">
				<xs:annotation>
					<xs:documentation source="description" xml:lang="no">name angir navnet til det spesifikke referanseobjektet. Det er ingen krav til navnsetting i utgangspunktet, men navnene for samme type objekt må være unike innen en addml-fil.</xs:documentation>
				</xs:annotation>
			</xs:attribute>
		</xs:complexType>
	</xs:element>
	<xs:element name="context">
		<xs:annotation>
			<xs:documentation source="description" xml:lang="no">context inneholder informasjon av kontekstuell art om avleveringen. Hva slags informasjon som skal være med under context må brukeren selv definere ved hjelp av additionalElement.</xs:documentation>
			<xs:documentation source="example" xml:lang="no"><![CDATA[
```xml
<reference>
	<context>
		<additionalElements>
			<additionalElement name="arkivskaper" datatype="string">
				<value>Kulturdepartementet</value>
			</additionalElement>
		</additionalElements>
	</context>
<reference>
```]]></xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:sequence>
				<xs:element ref="addml:description" minOccurs="0" />
				<xs:element ref="addml:additionalElements" minOccurs="0" />
				<xs:element ref="addml:processes" minOccurs="0" />
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:element name="content">
		<xs:annotation>
			<xs:documentation source="description" xml:lang="no">content inneholder informasjon av innholdsmessig art om avleveringen. Hva slags informasjon som skal være med under content må brukeren selv definere ved hjelp av additionalElement.</xs:documentation>
			<xs:documentation source="example" xml:lang="no"><![CDATA[
```xml
<reference>
	<content>
		<additionalElements>
			<additionalElement name="period">
				<additionalElements>
					<!= Inngående og utgående skille =>
				</additionalElements>
			</additionalElement>
		</additionalElements>
	</content>
<reference>
```]]></xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:sequence>
				<xs:element ref="addml:description" minOccurs="0" />
				<xs:element ref="addml:additionalElements" minOccurs="0" />
				<xs:element ref="addml:processes" minOccurs="0" />
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:element name="flatFiles">
		<xs:complexType>
			<xs:sequence>
				<xs:element ref="addml:flatFile" maxOccurs="unbounded" />
				<xs:element ref="addml:flatFileDefinitions" />
				<xs:element ref="addml:structureTypes" />
				<xs:element ref="addml:queries" minOccurs="0" />
				<xs:element ref="addml:processes" minOccurs="0" />
				<xs:element ref="addml:flatFileProcesses" minOccurs="0" maxOccurs="unbounded" />
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:element name="flatFile">
		<xs:complexType>
			<xs:sequence>
				<xs:element ref="addml:properties" minOccurs="0" />
			</xs:sequence>
			<xs:attribute name="name" type="xs:string" use="required">
				<xs:annotation>
					<xs:documentation source="description" xml:lang="no">name angir navnet til det spesifikke objekt. Det er ingen krav til navnsetting i utgangspunktet, men navnene for samme type objekt må være unike innen en addml-fil.</xs:documentation>
				</xs:annotation>
			</xs:attribute>
			<xs:attribute name="definitionReference" type="xs:string" use="required">
				<xs:annotation>
					<xs:documentation source="description" xml:lang="no">Referanse til flatFileDefinition, en referanse som kan være mange til en.</xs:documentation>
				</xs:annotation>
			</xs:attribute>
		</xs:complexType>
	</xs:element>
	<xs:element name="flatFileDefinitions">
		<xs:complexType>
			<xs:sequence>
				<xs:element ref="addml:flatFileDefinition" maxOccurs="unbounded" />
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:element name="flatFileDefinition">
		<xs:complexType>
			<xs:sequence>
				<xs:element ref="addml:description" minOccurs="0" />
				<xs:element ref="addml:properties" minOccurs="0" />
				<xs:element ref="addml:external" minOccurs="0" />
				<xs:element ref="addml:recordDefinitionFieldIdentifier" minOccurs="0" />
				<xs:element ref="addml:recordDefinitions" />
			</xs:sequence>
			<xs:attribute name="name" type="xs:string" use="required">
				<xs:annotation>
					<xs:documentation source="description" xml:lang="no">name angir navnet til det spesifikke objekt. Det er ingen krav til navnsetting i utgangspunktet, men navnene for samme type objekt må være unike innen en addml-fil.</xs:documentation>
				</xs:annotation>
			</xs:attribute>
			<xs:attribute name="typeReference" type="xs:string">
				<xs:annotation>
					<xs:documentation source="description" xml:lang="no">Referanse til flatFileType, en referanse som kan være mange til en.</xs:documentation>
				</xs:annotation>
			</xs:attribute>
		</xs:complexType>
	</xs:element>
	<xs:element name="external">
		<xs:annotation>
			<xs:documentation source="overview" xml:lang="no">I noen tilfeller er det behov for å knytte et datauttrekk til et annet. Det er da definert to elementer i ADDML som er tenkt å benyttes til dette formålet. Elementene er external som angir at den filen som her defineres ikke er med i selve datauttrekket, og incomplete som angir at definisjonen ikke er komplett. Tanken er at man for eksterne filer bare definerer de elementene som er nødvendig for å opprette referanser mellom filen som defineres utenfra og de interne filene.
Et eksempel på en slik kobling kan være at man i uttrekket definerer postkatalogen som en ekstern fil. Dette fordi den benyttes av flere systemer samtidig. Samtidig er det også opprettet referanser (nøkler) fra interne elementer med postnr til denne eksterne postkatalogen.</xs:documentation>
			<xs:documentation source="description" xml:lang="no">Dette elementet benyttes når det er referanser til filer som ikke er med i uttrekket. Elementet er da et flagg som benyttes for å angi at filen ikke er med. </xs:documentation>
			<xs:documentation source="example" xml:lang="no"><![CDATA[
```xml
<recordDefinition name=”post2”>
	<incomplete>
	<fixedLength>244</fixedLength>
	<fieldDefinition name=”postnr”>
		<startPos>1</startPos>
		<endPos>4</endpos>
	</fieldDefinition>
</recordDefinition>
```

I eksemplet er det definert en ufullstendig post (post2) med et
felt – postnr.]]></xs:documentation>
		</xs:annotation>
		<xs:complexType />
	</xs:element>
	<xs:element name="recordDefinitionFieldIdentifier" type="xs:string" />
	<xs:element name="recordDefinitions">
		<xs:complexType>
			<xs:sequence>
				<xs:element ref="addml:recordDefinition" maxOccurs="unbounded" />
			</xs:sequence>
		</xs:complexType>
		<xs:unique name="uniqueFieldReferenceRepetingGroups">
			<xs:selector
				xpath="addml:recordDefinition/addml:repeatingGroups/addml:repeatingGroup/addml:fieldDefinitionReferences/addml:fieldDefinitionReference" />
			<xs:field xpath="@name" />
		</xs:unique>
		<xs:unique name="uniqueFieldReferenceKeys">
			<xs:selector
				xpath="addml:recordDefinition/addml:keys/addml:key/addml:fieldDefinitionReferences/addml:fieldDefinitionReference" />
			<xs:field xpath="@name" />
		</xs:unique>
	</xs:element>
	<xs:element name="recordDefinition">
		<xs:complexType>
			<xs:sequence>
				<xs:element ref="addml:description" minOccurs="0" />
				<xs:element ref="addml:properties" minOccurs="0" />
				<xs:element ref="addml:recordDefinitionFieldValue" minOccurs="0" />
				<xs:element ref="addml:incomplete" minOccurs="0" />
				<xs:element ref="addml:fixedLength" minOccurs="0" />
				<xs:element ref="addml:repeatingGroups" minOccurs="0" />
				<xs:element ref="addml:keys" minOccurs="0" />
				<xs:element ref="addml:fieldDefinitions" />
				<xs:element ref="addml:headerLevel" minOccurs="0" />
			</xs:sequence>
			<xs:attribute name="name" type="xs:string" use="required">
				<xs:annotation>
					<xs:documentation source="description" xml:lang="no">name angir navnet til det spesifikke objekt. Det er ingen krav til navnsetting i utgangspunktet, men navnene for samme type objekt må være unike innen en addml-fil.</xs:documentation>
				</xs:annotation>
			</xs:attribute>
			<xs:attribute name="typeReference" type="xs:string">
				<xs:annotation>
					<xs:documentation source="description" xml:lang="no">Referanse til recordType. Kun påkrevd om ledende nuller eller etterfølgende og ledende blanke tegn er fjernet.</xs:documentation>
				</xs:annotation>
			</xs:attribute>
		</xs:complexType>
	</xs:element>
	<xs:element name="recordDefinitionFieldValue" type="xs:string" />
	<xs:element name="incomplete">
		<xs:complexType />
	</xs:element>
	<xs:element name="fixedLength" type="xs:nonNegativeInteger" />
	<xs:element name="repeatingGroups">
		<xs:complexType>
			<xs:sequence>
				<xs:element ref="addml:repeatingGroup" maxOccurs="unbounded" />
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:element name="repeatingGroup">
		<xs:complexType>
			<xs:sequence>
				<xs:choice minOccurs="0">
					<xs:element ref="addml:repeatingGroupOccurrenceField" />
					<xs:element ref="addml:fixedOccurrences" />
				</xs:choice>
				<xs:element ref="addml:fieldDefinitionReferences" />
			</xs:sequence>
			<xs:attribute name="name" type="xs:string">
				<xs:annotation>
					<xs:documentation source="description" xml:lang="no">name angir navnet til det spesifikke objekt. Det er ingen krav til navnsetting i utgangspunktet, men navnene for samme type objekt må være unike innen en addml-fil.</xs:documentation>
				</xs:annotation>
			</xs:attribute>
		</xs:complexType>
	</xs:element>
	<xs:element name="repeatingGroupOccurrenceField">
		<xs:complexType>
			<xs:attribute name="definitionReference" type="xs:string" use="required">
				<xs:annotation>
					<xs:documentation source="description" xml:lang="no">Referanse til fieldDefinition.</xs:documentation>
				</xs:annotation>
			</xs:attribute>
		</xs:complexType>
	</xs:element>
	<xs:element name="fixedOccurrences" type="xs:nonNegativeInteger" />
	<xs:element name="keys">
		<xs:complexType>
			<xs:sequence>
				<xs:element ref="addml:key" maxOccurs="unbounded" />
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:element name="key">
		<xs:complexType>
			<xs:sequence>
				<xs:choice>
					<xs:element ref="addml:primaryKey" />
					<xs:element ref="addml:alternateKey" />
					<xs:element ref="addml:foreignKey" />
				</xs:choice>
				<xs:element ref="addml:fieldDefinitionReferences" />
			</xs:sequence>
			<xs:attribute name="name" type="xs:string">
				<xs:annotation>
					<xs:documentation source="description" xml:lang="no">name angir navnet til det spesifikke objekt. Det er ingen krav til navnsetting i utgangspunktet, men navnene for samme type objekt må være unike innen en addml-fil.</xs:documentation>
				</xs:annotation>
			</xs:attribute>
		</xs:complexType>
	</xs:element>
	<xs:element name="primaryKey">
		<xs:complexType />
	</xs:element>
	<xs:element name="alternateKey">
		<xs:annotation>
			<xs:documentation source="description" xml:lang="no">Dette elementet benyttes for å angi alternative nøkler. I praksis vil dette gi muligheten for å angi indekser. Selve elementet er kun et flagg.</xs:documentation>
			<xs:documentation source="example" xml:lang="no"><![CDATA[
```xml
<key name="indeks1">
	<alternateKey/>
	<fieldDefinitionReferences>
		<!= elementene som inngår i nøkkel =>
	</fieldDefinitionReferences>
</key>
```

I eksemplet er det definert en nøkkel indeks1 som en alternative nøkkel (evt en indeks) og hvor de elementene som inngår er definert under fieldDefinitionReferences.]]></xs:documentation>
		</xs:annotation>
		<xs:complexType />
	</xs:element>
	<xs:element name="foreignKey">
		<xs:complexType>
			<xs:sequence>
				<xs:element ref="addml:flatFileDefinitionReference" />
				<xs:element ref="addml:relationType" />
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:element name="relationType" type="xs:string" />
	<xs:element name="fieldDefinitions">
		<xs:complexType>
			<xs:sequence>
				<xs:element ref="addml:fieldDefinition" maxOccurs="unbounded" />
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:element name="fieldDefinition">
		<xs:annotation>
			<xs:documentation source="overview" xml:lang="no">I ADDML er det tre parallelle informasjonstyper, den øverste er den generelle typen, hvor basis informasjon om felter defineres. Deretter kommer definisjonen av det enkelt felt, hvor man for mer eksplisitt informasjon om et felt og til slutt det fysiske delen som dog bare er på filnivå. Elementet som forklares her er på definisjonslaget.</xs:documentation>
			<xs:documentation source="description" xml:lang="no">Dette elementet er en beholder for informasjon om ett enkelt felt for filer som er i fast format, dvs. fast posisjonering eller tegnseparert.</xs:documentation>
			<xs:documentation source="example" xml:lang="no"><![CDATA[
```xml
<fieldDefinition name=”kjønn” typeReference=”flagg”>
	<startPos>1</startPos>
	<endPos>1</endPos>
	<codes>
		<code codeValue=”M” explan=”Mann”>
		<code codeValue=”K” explan=”Kvinne”>
		<code codeValue=”U” explan=”Ukjent”>
		<code codeValue=” ” explan=”Ikke oppgitt”>
	</codes>
   </fieldDefinition>
   <fieldDefinition name=”fødselsnr” typeReference=”fnr”>
	<startPos>1</startPos>
	<fixedLength>11</fixedLength>
	<notNull/>
	<unique/>
</fieldDefinition>
```

Over er vist et par eksempler med felter kjønn og fødselsnr.]]></xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:sequence>
				<xs:element ref="addml:description" minOccurs="0" />
				<xs:element ref="addml:properties" minOccurs="0" />
				<xs:element ref="addml:startPos" minOccurs="0" />
				<xs:element ref="addml:endPos" minOccurs="0" />
				<xs:element ref="addml:fixedLength" minOccurs="0" />
				<xs:element ref="addml:minLength" minOccurs="0" />
				<xs:element ref="addml:maxLength" minOccurs="0" />
				<xs:element ref="addml:unique" minOccurs="0" />
				<xs:element ref="addml:notNull" minOccurs="0" />
				<xs:element ref="addml:fieldParts" minOccurs="0" />
				<xs:element ref="addml:codes" minOccurs="0" />
			</xs:sequence>
			<xs:attribute name="name" type="xs:string" use="required">
				<xs:annotation>
					<xs:documentation source="description" xml:lang="no">name angir navnet til det spesifikke objekt. Det er ingen krav til navnsetting i utgangspunktet, men navnene for samme type objekt må være unike innen en addml-fil.</xs:documentation>
				</xs:annotation>
			</xs:attribute>
			<xs:attribute name="typeReference" type="xs:string" use="required">
				<xs:annotation>
					<xs:documentation source="description" xml:lang="no">Referanse til fieldType.</xs:documentation>
				</xs:annotation>
			</xs:attribute>
		</xs:complexType>
	</xs:element>
	<xs:element name="startPos" type="xs:nonNegativeInteger" />
	<xs:element name="endPos" type="xs:nonNegativeInteger">
		<xs:annotation>
			<xs:documentation source="description" xml:lang="no">Dette elementet inneholder sluttposisjonen for et felt når det er snakk om et uttrekk med en flat fil med fast posisjonering.</xs:documentation>
			<xs:documentation source="example" xml:lang="no"><![CDATA[For eksempel se fieldDefinition.]]></xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="minLength" type="xs:nonNegativeInteger" />
	<xs:element name="maxLength" type="xs:nonNegativeInteger" />
	<xs:element name="unique">
		<xs:complexType />
	</xs:element>
	<xs:element name="notNull">
		<xs:complexType />
	</xs:element>
	<xs:element name="fieldParts">
		<xs:complexType>
			<xs:sequence>
				<xs:element ref="addml:fieldDefinition" maxOccurs="unbounded" />
			</xs:sequence>
			<xs:attribute name="name" type="xs:string">
				<xs:annotation>
					<xs:documentation source="description" xml:lang="no">name angir navnet til det spesifikke objekt. Det er ingen krav til navnsetting i utgangspunktet, men navnene for samme type objekt må være unike innen en addml-fil.</xs:documentation>
				</xs:annotation>
			</xs:attribute>
		</xs:complexType>
	</xs:element>
	<xs:element name="codes">
		<xs:annotation>
			<xs:documentation source="description" xml:lang="no">Dette elementet er en gruppering av de gyldige kodene for et felt i datasettet.</xs:documentation>
			<xs:documentation source="example" xml:lang="no"><![CDATA[
For eksempel se *code*.]]></xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:sequence>
				<xs:element ref="addml:code" maxOccurs="unbounded" />
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:element name="code">
		<xs:annotation>
			<xs:documentation source="overview" xml:lang="no">For et enkelt felt i et datasett kan man definere gyldige kodeverdier. Dette anbefales kun å gjøre dersom det er et begrenset antall, selv om standarden selv ikke setter noen begrensninger på antallet. Men dersom det er mange kodeverdier, anbefales heller at disse følger med datasettet som en egen fil.</xs:documentation>
			<xs:documentation source="description" xml:lang="no">Elementet code benyttes til å angi kodeverdier for et enkelt felt i et datasett.</xs:documentation>
			<xs:documentation source="example" xml:lang="no"><![CDATA[
```xml
<fieldDefinition name="kjønn">
	<codes>
		<code codeValue="M" explan="Mann">
		<code codeValue="K" explan="Kvinne">
		<code codeValue="U" explan="Ukjent">
		<code codeValue=" " explan="Ikke oppgitt">
	</codes>
</fieldDefinition>
```

Legg merke til at i eksemplet er blank verdi en gyldig kodeverdi som ikke oppgitt, og at denne er en annen verdi enn ukjent.]]></xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:attribute name="codeValue" type="xs:string" use="required">
				<xs:annotation>
					<xs:documentation source="description" xml:lang="no">Den faktiske gyldige kodeverdien</xs:documentation>
				</xs:annotation>
			</xs:attribute>
			<xs:attribute name="explan" type="xs:string">
				<xs:annotation>
					<xs:documentation source="description" xml:lang="no">En forklaring på hva kodeverdien skal bety. Kan være spesielt nyttig når verdien av koden er kort og kryptisk.</xs:documentation>
				</xs:annotation>
			</xs:attribute>
		</xs:complexType>
	</xs:element>
	<xs:element name="structureTypes">
		<xs:complexType>
			<xs:sequence>
				<xs:element ref="addml:flatFileTypes" />
				<xs:element ref="addml:recordTypes" minOccurs="0" />
				<xs:element ref="addml:fieldTypes" />
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:element name="flatFileTypes">
		<xs:complexType>
			<xs:sequence>
				<xs:element ref="addml:flatFileType" maxOccurs="unbounded" />
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:element name="flatFileType">
		<xs:complexType>
			<xs:sequence>
				<xs:element ref="addml:description" minOccurs="0" />
				<xs:element ref="addml:charset" />
				<xs:element ref="addml:charDefinitions" minOccurs="0" />
				<xs:choice>
					<xs:element ref="addml:fixedFileFormat" />
					<xs:element ref="addml:delimFileFormat" />
				</xs:choice>
			</xs:sequence>
			<xs:attribute name="name" type="xs:string" use="required">
				<xs:annotation>
					<xs:documentation source="description" xml:lang="no">name angir navnet til det spesifikke objekt. Det er ingen krav til navnsetting i utgangspunktet, men navnene for samme type objekt må være unike innen en addml-fil.</xs:documentation>
				</xs:annotation>
			</xs:attribute>
		</xs:complexType>
	</xs:element>
	<xs:element name="charset" type="xs:string">
		<xs:annotation>
			<xs:documentation source="description" xml:lang="no">Dette elementet benyttes til å angi tegnsettet som benyttes i datasettet. Brukeren må selv definere hvordan de forskjellige tegnsettene skal angis.</xs:documentation>
			<xs:documentation source="example" xml:lang="no"><![CDATA[
```xml
<flatFileType name="fil1">
	<charset>ISO-8859-1</charset>
</flatFileType>
```

I eksemplet er f.eks tegnsettet angitt til å være ISO-8859-1.]]></xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="charDefinitions">
		<xs:annotation>
			<xs:documentation source="description" xml:lang="no">Dette elementet er et gruppenivå som inneholder de enkelte tegnene som har avvikende verdi.</xs:documentation>
			<xs:documentation source="example" xml:lang="no"><![CDATA[
				For eksempel se *charDefinition*.
							]]></xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:sequence>
				<xs:element ref="addml:charDefinition" maxOccurs="unbounded" />
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:element name="charDefinition">
		<xs:annotation>
			<xs:documentation source="overview" xml:lang="no">charDefinition er ment å kunne benyttes ved spesialtegn som ikke følger vanlig standard. I de fleste tilfeller vil det være nok å bare angi tegnsett. Men dersom et datasett har avvikende tegn kan man benytte denne muligheten til å redefinere de få tegnene som avviker.</xs:documentation>
			<xs:documentation source="description" xml:lang="no">Elementet benyttes for angivelse av endring av en verdi for ett enkelt tegn som avviker fra tegnsettet som er oppgitt.</xs:documentation>
			<xs:documentation source="example" xml:lang="no"><![CDATA[
```xml
<flatFileType name="fil1">
	<charset>EBCDIC</charset>
	<charDefinitions>
		<charDefinition fromChar="E6" toChar="5B">
		<charDefiniton fromChar="F8" toChar="7C">
		<charDefinition fromChar="E5" toChar="5D">
	</charDefinitions>
	….
</flatFileType>
```

I eksempelet er vist en mulig endring av verdien av de norske bokstavene æ, ø og å (små verdier) fra deres standard versjon i EBCDIC til en spesiell variant som har vært i bruk i Norge. Nemlig liten æ inn på plassen for [, liten ø inn på plassen for | og liten å inn på plassen for ].

I eksemplet er verdiene av tegnene oppgitt med hexadesimal verdi
			]]></xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:attribute name="fromChar" type="xs:string" use="required">
				<xs:annotation>
					<xs:documentation source="description" xml:lang="no">Angivelse av verdien slik den er definert i tegnsettet. Hva slags type verdi som skal benyttes er det opp til brukeren å bestemme.</xs:documentation>
				</xs:annotation>
			</xs:attribute>
			<xs:attribute name="toChar" type="xs:string" use="required">
				<xs:annotation>
					<xs:documentation source="description" xml:lang="no">Angivelse av verdien slik den er i datasettet og som altså avviker fra tegnsettet. Hva slags type verdi som skal benyttes er det opp til brukeren å bestemme.</xs:documentation>
				</xs:annotation>
			</xs:attribute>
		</xs:complexType>
	</xs:element>
	<xs:element name="fixedFileFormat">
		<xs:complexType>
			<xs:sequence>
				<xs:element ref="addml:recordSeparator" minOccurs="0" />
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:element name="delimFileFormat">
		<xs:annotation>
			<xs:documentation source="description" xml:lang="no">Dette elementet benyttes for flate filer for å angi at feltene i filene er atskilt med et tegn og ikke har faste posisjoner.</xs:documentation>
			<xs:documentation source="example" xml:lang="no"><![CDATA[
```xml
<flatFileType name=”fil1”>
	<delimFileFormat/>
</flatFileType>
```
	
I eksemplet er fil1 oppgitt å være en fil inneholdende felter som er separert ved et skilletegn, og dermed ikke har noen fast posisjon.]]></xs:documentation>
			</xs:annotation>
		<xs:complexType>
			<xs:sequence>
				<xs:element ref="addml:recordSeparator" />
				<xs:element ref="addml:fieldSeparatingChar" />
				<xs:element ref="addml:quotingChar" minOccurs="0" />
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:element name="fieldSeparatingChar" type="xs:string" />
	<xs:element name="quotingChar" type="xs:string" />
	<xs:element name="recordTypes">
		<xs:complexType>
			<xs:sequence>
				<xs:element ref="addml:recordType" maxOccurs="unbounded" />
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:element name="recordType">
		<xs:complexType>
			<xs:sequence>
				<xs:element ref="addml:description" minOccurs="0" />
				<xs:element ref="addml:trimmed" minOccurs="0" />
			</xs:sequence>
			<xs:attribute name="name" type="xs:string" use="required">
				<xs:annotation>
					<xs:documentation source="description" xml:lang="no">name angir navnet til det spesifikke objekt. Det er ingen krav til navnsetting i utgangspunktet, men navnene for samme type objekt må være unike innen en addml-fil.</xs:documentation>
				</xs:annotation>
			</xs:attribute>
		</xs:complexType>
	</xs:element>
	<xs:element name="trimmed">
		<xs:complexType />
	</xs:element>
	<xs:element name="fieldTypes">
		<xs:complexType>
			<xs:sequence>
				<xs:element ref="addml:fieldType" maxOccurs="unbounded" />
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:element name="fieldType">
		<xs:annotation>
			<xs:documentation source="description" xml:lang="no">For typene på feltnivå benyttes elementene fieldTypes og fieldType, og som vanlig med et samlenivå og et detaljnivå. På feltnivå kan det angis et navn på typen, en beskrivelse (hvis man ønsker), samt datatypen for feltet, feltformatet, hvilken justering feltet har, om feltet er fylt ut med blanke tegn, hva slags pakking feltet har (dersom det er pakket) og om det er benyttet spesielle tegn for nullverdier.</xs:documentation>
			<xs:documentation source="example" xml:lang="no"><![CDATA[
```xml
<fieldType name=”dato8”>
	<dataType>date</dataType>
	<fieldFormat>YYYY.MM.DD</fieldFormat>
</fieldType>
```

I eksemplet er definert en felttype ved navn dato8. Felttypen angir at et felt av denne typen er av dataformat dato (date) og at datoen skal være på formen YYYY.MM.DD som f.eks. 2018.06.28.]]></xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:sequence>
				<xs:element ref="addml:description" minOccurs="0" />
				<xs:element ref="addml:dataType" />
				<xs:element ref="addml:fieldFormat" minOccurs="0" />
				<xs:element ref="addml:alignment" minOccurs="0" />
				<xs:element ref="addml:padChar" minOccurs="0" />
				<xs:element ref="addml:packType" minOccurs="0" />
				<xs:element ref="addml:nullValues" minOccurs="0" />
			</xs:sequence>
			<xs:attribute name="name" type="xs:string" use="required">
				<xs:annotation>
					<xs:documentation source="description" xml:lang="no">name angir navnet til det spesifikke objekt. Det er ingen krav til navnsetting i utgangspunktet, men navnene for samme type objekt må være unike innen en addml-fil.</xs:documentation>
				</xs:annotation>
			</xs:attribute>
		</xs:complexType>
	</xs:element>
	<xs:element name="dataType" type="xs:string">
		<xs:annotation>
			<xs:documentation source="description" xml:lang="no">Hvilken datatype et felt er. Brukeren må selv definere gyldige datatyper og hvordan de skal betegnes.</xs:documentation>
			<xs:documentation source="example" xml:lang="no"><![CDATA[
```xml
<fieldType name="heltall">
	<dataType>integer</dataType>
</fieldType>
```

I eksemplet er det definert en felttype som heter heltall. Denne er da definert som datatypen
integer (integer for heltall).]]></xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="fieldFormat" type="xs:string" />
	<xs:element name="alignment" type="xs:string">
		<xs:annotation>
			<xs:documentation source="description" xml:lang="no">alignment benyttes for å angi hvorvidt innholdet i et felt er venstrejustert, høyrejustert eller midtstilt. Brukeren selv må definere de faktiske verdiene for alignment.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="padChar" type="xs:string" />
	<xs:element name="packType" type="xs:string" />
	<xs:element name="nullValues">
		<xs:complexType>
			<xs:sequence>
				<xs:element ref="addml:nullValue" maxOccurs="unbounded" />
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:element name="nullValue" type="xs:string" />
	<xs:element name="queries">
		<xs:complexType>
			<xs:sequence>
				<xs:element ref="addml:query" maxOccurs="unbounded" />
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:element name="query">
		<xs:complexType>
			<xs:sequence>
				<xs:element ref="addml:description" minOccurs="0" />
				<xs:element ref="addml:statement" />
			</xs:sequence>
			<xs:attribute name="name" type="xs:string">
				<xs:annotation>
					<xs:documentation source="description" xml:lang="no">name angir navnet til det spesifikke objekt. Det er ingen krav til navnsetting i utgangspunktet, men navnene for samme type objekt må være unike innen en addml-fil.</xs:documentation>
				</xs:annotation>
			</xs:attribute>
		</xs:complexType>
	</xs:element>
	<xs:element name="statement" type="xs:string" />
	<xs:element name="flatFileProcesses">
		<xs:complexType>
			<xs:sequence>
				<xs:element ref="addml:processes" minOccurs="0" />
				<xs:element ref="addml:recordProcesses" minOccurs="0" maxOccurs="unbounded" />
			</xs:sequence>
			<xs:attribute name="flatFileReference" type="xs:string" use="required">
				<xs:annotation>
					<xs:documentation source="description" xml:lang="no"></xs:documentation>
				</xs:annotation>
			</xs:attribute>
		</xs:complexType>
	</xs:element>
	<xs:element name="recordProcesses">
		<xs:complexType>
			<xs:sequence>
				<xs:element ref="addml:processes" minOccurs="0" />
				<xs:element ref="addml:fieldProcesses" minOccurs="0" maxOccurs="unbounded" />
			</xs:sequence>
			<xs:attribute name="definitionReference" type="xs:string" use="required">
				<xs:annotation>
					<xs:documentation source="description" xml:lang="no"></xs:documentation>
				</xs:annotation>
			</xs:attribute>
		</xs:complexType>
	</xs:element>
	<xs:element name="fieldProcesses">
		<xs:complexType>
			<xs:sequence>
				<xs:element ref="addml:processes" />
			</xs:sequence>
			<xs:attribute name="definitionReference" type="xs:string" use="required">
				<xs:annotation>
					<xs:documentation source="description" xml:lang="no"></xs:documentation>
				</xs:annotation>
			</xs:attribute>
		</xs:complexType>
	</xs:element>
	<xs:element name="processes">
		<xs:complexType>
			<xs:sequence>
				<xs:element ref="addml:process" maxOccurs="unbounded" />
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:element name="process">
		<xs:complexType>
			<xs:sequence>
				<xs:element ref="addml:parameters" minOccurs="0" />
			</xs:sequence>
			<xs:attribute name="name" type="xs:string" use="required">
				<xs:annotation>
					<xs:documentation source="description" xml:lang="no">Navn på prosess som skal utføres. Dette er noe som brukerne og leverandørene av applikasjonene som benyttes må være enige om.</xs:documentation>
				</xs:annotation>
			</xs:attribute>
		</xs:complexType>
	</xs:element>
	<xs:element name="parameters">
		<xs:complexType>
			<xs:sequence>
				<xs:element ref="addml:parameter" maxOccurs="unbounded" />
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:element name="parameter">
		<xs:complexType>
			<xs:attribute name="name" type="xs:string" use="required">
				<xs:annotation>
					<xs:documentation source="description" xml:lang="no">Navn på parameter som tilhører prosessen som skal utføres. Dette er noe som brukerne og leverandørene av applikasjonene som benyttes må være enige om.</xs:documentation>
				</xs:annotation>
			</xs:attribute>
			<xs:attribute name="value" type="xs:string">
				<xs:annotation>
					<xs:documentation source="description" xml:lang="no"></xs:documentation>
				</xs:annotation>
			</xs:attribute>
		</xs:complexType>
	</xs:element>
	<xs:element name="flatFileDefinitionReference">
		<xs:complexType>
			<xs:sequence>
				<xs:element ref="addml:recordDefinitionReferences" minOccurs="0" />
			</xs:sequence>
			<xs:attribute name="name" type="xs:string" use="required">
				<xs:annotation>
					<xs:documentation source="description" xml:lang="no">Referanse til en flatFile.</xs:documentation>
				</xs:annotation>
			</xs:attribute>
		</xs:complexType>
	</xs:element>
	<xs:element name="recordDefinitionReferences">
		<xs:complexType>
			<xs:sequence>
				<xs:element ref="addml:recordDefinitionReference" maxOccurs="unbounded" />
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:element name="recordDefinitionReference">
		<xs:complexType>
			<xs:sequence>
				<xs:element ref="addml:fieldDefinitionReferences" minOccurs="0" />
			</xs:sequence>
			<xs:attribute name="name" type="xs:string" use="required">
				<xs:annotation>
					<xs:documentation source="description" xml:lang="no">Referanse til en recordDefinition</xs:documentation>
				</xs:annotation>
			</xs:attribute>
		</xs:complexType>
	</xs:element>
	<xs:element name="fieldDefinitionReferences">
		<xs:annotation>
			<xs:documentation source="description" xml:lang="no">Dette elementet er en samling av feltreferanser.</xs:documentation>
			<xs:documentation source="example" xml:lang="no"><![CDATA[
```xml

```

For eksempel se [fieldDefinitionReference](#fieldDefinitionReference).]]></xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:sequence>
				<xs:element ref="addml:fieldDefinitionReference" maxOccurs="unbounded" />
			</xs:sequence>
		</xs:complexType>
		<xs:unique name="uniqueFieldReference">
			<xs:selector xpath="addml:fieldDefinitionReference" />
			<xs:field xpath="@name" />
		</xs:unique>
	</xs:element>
	<xs:element name="fieldDefinitionReference">
		<xs:annotation>
			<xs:documentation source="description" xml:lang="no">Referanse til et felt</xs:documentation>
			<xs:documentation source="example" xml:lang="no"><![CDATA[
```xml
 <key>
	<foreignKey>
		<flatFileDefinitionReference name=”fil2”>
			<recordDefinitionReferences>
				<recordDefinitionReference name=”post2”>
					<fieldDefinitionReferences>
						<fieldDefinitionReference name=”postnr”/>
					</fieldDefinitionReferences>
				</recordDefinitionReference>
			</recordDefinitionReferences>
		</flatFileDefinitionReference>
		<relationType>n:1</relationType>
	</foreignKey>
	<fieldDefinitionReferences>
		<fieldDefinitionReference name=”postnr”>
	</fieldDefinitionReferences>
 </key>
```

text]]></xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:attribute name="name" type="xs:string" use="required">
				<xs:annotation>
					<xs:documentation source="description" xml:lang="no">Referanse til et fieldDefinition-felt</xs:documentation>
				</xs:annotation>
			</xs:attribute>
		</xs:complexType>
	</xs:element>

	<xs:element name="dataObjects">
		<xs:annotation>
			<xs:documentation source="overview" xml:lang="no">De første versjonene av ADDML ble konstruert for å håndtere flate filer. Etter hvert er det også blitt behov for å håndtere andre typer filer, ikke minst xml-filer. Av den grunn ble det innført en ny hoveddel med dataobjekter. Denne delen er generisk, hvor brukeren selv må definere strukturer og informasjonselementer som skal være med.</xs:documentation>
			<xs:documentation source="description" xml:lang="no">Dette er elementer hvor man kan lage en egen hierarkisk struktur for filer som ikke er flate filer. Man må selv bygge opp strukturen på det viset en selv føler blir best mulig.</xs:documentation>
			<xs:documentation source="example" xml:lang="no"><![CDATA[
For eksempel se *dataObject*.]]></xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:sequence>
				<xs:element ref="addml:description" minOccurs="0" />
				<xs:element ref="addml:dataObject" maxOccurs="unbounded" />
				<xs:element ref="addml:processes" minOccurs="0" />
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:element name="dataObject">
		<xs:annotation>
			<xs:documentation source="overview" xml:lang="no">De første versjonene av ADDML ble konstruert for å håndtere flate filer. Etter hvert er detogså blitt behov for å håndtere andre typer filer, ikke minst xml-filer. Av den grunn ble det innført en ny hoveddel med dataobjekter. Denne delen er generisk, hvor brukeren selv må definere strukturer og informasjonselementer som skal være med.</xs:documentation>
			<xs:documentation source="description" xml:lang="no">Dette er elementer hvor man kan lage en egen hierarkisk struktur for filer som ikke er flate filer. Man må selv bygge opp strukturen på det viset en selv føler blir best mulig.</xs:documentation>
			<xs:documentation source="example" xml:lang="no"><![CDATA[
```xml
<dataObjects>
	<dataObject name="Noark 5-arkivuttrekk">
		<properties>
			<property name="info">
				<properties>
					<property name="type">
						<value>Noark 5</value>
						<properties>
							<property name="version">
								<value>5.0</value>
							</property>
						</properties>
					</property>
				</properties>
			</property>
		</properties>
		<dataObjects>
			<dataObject name="arkivstruktur">
				<properties>
					<property name="file">
						<!= Filegenskaper =>
					</property>
					<property name="schema">
						<value>main</value>
						<!= Hovedskjema =>
					</property>
					<property name="schema">
						<!= Andre skjema =>
					</property>
					<property name="info">
						<!= Informasjon =>
					</property>
				</properties>
			</dataObject>
		</dataObjects>
	</dataObject>
</dataObjects>
```

Eksempelet er hentet fra Noark 5. I datasettet er det definert et arkivuttrekk-nivå, med egenskaper som beskriver type og versjon arkivuttrekk som dataobjektet inneholder. Dette objektet inneholder ett under-dataobjekt, arkivstruktur, som er fil-nivå. Den inneholder filegenskaper, skjema-referanser og mer-informasjon.]]></xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:sequence>
				<xs:element ref="addml:description" minOccurs="0" />
				<xs:element ref="addml:properties" minOccurs="0" />
				<xs:element ref="addml:dataObjects" minOccurs="0" />
				<xs:element ref="addml:processes" minOccurs="0" />
			</xs:sequence>
			<xs:attribute name="name" type="xs:string" use="required">
				<xs:annotation>
					<xs:documentation source="description" xml:lang="no">Navnet på dataobjektet som defineres. </xs:documentation>
				</xs:annotation>
			</xs:attribute>
		</xs:complexType>
	</xs:element>
	<xs:element name="additionalElements">
		<xs:annotation>
			<xs:documentation source="description" xml:lang="no">Dette elementet benyttes for å samle tilleggselementer i grupper. Og derigjennom å kunne danne strukturer av tilleggselementer.</xs:documentation>
			<xs:documentation source="overview" xml:lang="no">Elementet additionalElements er et samlenivå for gruppering av tilleggselementer.</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:sequence>
				<xs:element ref="addml:description" minOccurs="0" />
				<xs:element ref="addml:additionalElement" maxOccurs="unbounded" />
				<xs:element ref="addml:processes" minOccurs="0" />
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:element name="additionalElement">
		<xs:annotation>
			<xs:documentation source="overview">Elementet additionalElement utgjør et egetdefinert element. Standarden selv definerer ingen tilleggselementer, men lar det være opp til brukerne å definere sine egne. Sammen med additionalElements danner additionalElement muligheten for å kunne bygge sin egen generiske struktur.</xs:documentation>
			<xs:documentation source="description">Identifiserer et enkelt tilleggselement. Et tilleggselement defineres av brukeren.</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:sequence>
				<xs:element ref="addml:value" minOccurs="0" />
				<xs:element ref="addml:properties" minOccurs="0" />
				<xs:element ref="addml:additionalElements" minOccurs="0" />
				<xs:element ref="addml:processes" minOccurs="0" />
			</xs:sequence>
			<xs:attribute name="name" type="xs:string" use="required">
				<xs:annotation>
					<xs:documentation source="description" xml:lang="no">Alle tilleggselement må ha et navn. Navnet identifiserer tilleggselementet og vil være utgangspunktet for eventuelle operasjoner som skal utføres på elementet eller gjenfinning av elementet for annet bruk.</xs:documentation>
				</xs:annotation>
			</xs:attribute>
			<xs:attribute name="dataType" type="xs:string">
				<xs:annotation>
					<xs:documentation source="description" xml:lang="no">Siden tilleggselementet kan ha et underelement med en verdi, kan man identifisere datatypen til denne verdien.</xs:documentation>
				</xs:annotation>
			</xs:attribute>
			<xs:attribute name="format" type="xs:string">
				<xs:annotation>
					<xs:documentation source="description" xml:lang="no">Siden tilleggselementet kan ha et underelement med en verdi, kan man identifisere formatet til denne verdien. Hvilke formater som skal aksepteres må brukeren selv definere.</xs:documentation>
				</xs:annotation>
			</xs:attribute>
		</xs:complexType>
	</xs:element>
	<xs:element name="description" type="xs:string">
		<xs:annotation>
			<xs:documentation source="overview" xml:lang="no">Elementet beskrivelse benyttes flere steder i strukturen.</xs:documentation>
			<xs:documentation source="description" xml:lang="no">Dette elementet inneholder en tekstlig beskrivelse knyttet til elementet det ligger under.</xs:documentation>
			<xs:documentation source="example" xml:lang="no"><![CDATA[
```xml
<dataset>
	<description>
	Dette datasettet inneholder et arkivuttrekk fra system x fra arkivskaper y.
	</description>
</dataset>
```

text]]></xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="properties">
		<xs:complexType>
			<xs:sequence>
				<xs:element ref="addml:property" maxOccurs="unbounded" />
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:element name="property">
		<xs:complexType>
			<xs:sequence>
				<xs:element ref="addml:value" minOccurs="0" />
				<xs:element ref="addml:properties" minOccurs="0" />
			</xs:sequence>
			<xs:attribute name="name" type="xs:string" use="required">
				<xs:annotation>
					<xs:documentation source="description" xml:lang="no">Alle egenskaper må ha et navn. Navnet identifiserer egenskapen og vil være utgangspunktet for eventuelle operasjoner som skal utføres på egenskapen eller gjenfinning av egenskapen for annet bruk.</xs:documentation>
				</xs:annotation>
			</xs:attribute>
			<xs:attribute name="dataType" type="xs:string">
				<xs:annotation>
					<xs:documentation source="description" xml:lang="no">Siden egenskapen kan ha et underelement med en verdi, kan man identifisere datatypen til denne verdien.</xs:documentation>
				</xs:annotation>
			</xs:attribute>
			<xs:attribute name="format" type="xs:string">
				<xs:annotation>
					<xs:documentation source="description" xml:lang="no">Siden egenskapen kan ha et underelement med en verdi, kan man identifisere formatet til denne verdien. Hvilke formater som skal aksepteres må brukeren selv definere.</xs:documentation>
				</xs:annotation>
			</xs:attribute>
		</xs:complexType>
	</xs:element>
	<xs:element name="headerLevel" type="xs:integer" />
	<xs:element name="recordSeparator" type="xs:string" />
	<xs:element name="value" type="xs:string" />
</xs:schema>